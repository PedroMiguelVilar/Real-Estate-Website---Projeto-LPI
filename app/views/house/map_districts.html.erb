<!DOCTYPE html>
<html>
  <head>
    <title>Portugal Map</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Load Leaflet from CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://d3js.org/d3.v6.min.js"></script>
  </head>
  <body>
    <style>
      #map {
        width: 75%;
        height: 600px;
        margin: 0 auto;
      }
      .district {
          fill: #3388ff;
          stroke: #fff;
          stroke-width: 2;
          opacity: 0.7;
        }
        .city {
          fill: #ff8800;
          stroke: #fff;
          stroke-width: 2;
          opacity: 0.7;
        }
    </style>
    <%= javascript_include_tag 'leaflet' %>
    <!-- Add a dropdown menu or a list of buttons for layer selection -->
    <select id="layerSelect">
      <option value="distritos">Distritos</option>
      <option value="concelhos">Concelhos</option>
      <option value="freguesias">Freguesias</option>
    </select>
    <div id="map"></div>

<table>
  <tr>
    <th>Distrito</th>
    <th>Average Price Alugar</th>
    <th>Average Price Comprar</th>
    <th>Average Price</th>
    <th>Value</th>
  </tr>
  <tbody id="distritosTableBody"></tbody>
</table>



    <script>
      var mymap = L.map('map').setView([38.736946, -9.142685], 6);
      var myResults = <%= results.to_json.html_safe %>;

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
       attribution: '&copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
       maxZoom: 18
      }).addTo(mymap);

      var distritosData, concelhosData, freguesiasData;

      // Initialize GeoJSON layers
      distritosData = L.geoJSON(null, {
       style: function(feature) {
         return {
           color: "white",
           fillColor: "#FEB24C",
           fillOpacity: 0.5
         };
       }
      });


      concelhosData = L.geoJSON(null, {
       style: function(feature) {
         return {
           color: "white",
           fillColor: "#FEB24C",
           fillOpacity: 0.5
         };
       }
      });

      freguesiasData = L.geoJSON(null, {
       style: function(feature) {
         return {
           color: "white",
           fillColor: "#FD8D3C",
           fillOpacity: 0.5
         };
       }
      });

      // Get the table body element
      var tableBody = document.getElementById("distritosTableBody");

      // Define combined function for style and event listeners
       async function styleAndEventListeners(feature, layer, typeLayer) {
        var maxAveragePrice = 1000000; // Set maximum value for scaling

        switch (typeLayer) {
          case "distrito":
           var typefeature = feature.properties.NAME_1;
           break;
          case "concelho":
           var typefeature = feature.properties.NAME_2;
           break;
          case "freguesia":
           var typefeature = feature.properties.NAME_3;
           break;
          default:
           typefeature = null;
           break;
        }
        
        var averagePrice_a = null;
        var averagePrice_c = null;

        // Loop through the results from the controller to find the average price for the current freguesia
        for (var i = 0; i < myResults.length; i++) {
          if (myResults[i][typeLayer] && myResults[i][typeLayer].replace(/Ilha de |Ilha do |Ilha da /g, "").replace(/Distrito de |Distrito do |Distrito da /g, "").replace(/\s+/g, "").toUpperCase() === typefeature.replace(/\s+/g, "").toUpperCase()) {
            averagePrice_a = myResults[i]["houses_in_group_" + typeLayer + "_alugar"];
            averagePrice_c = myResults[i]["houses_in_group_" + typeLayer + "_comprar"];
            break;
          }
        }
      
        var averagePrice = parseFloat(averagePrice_c + averagePrice_a) / 2;
        var value = parseFloat(averagePrice / maxAveragePrice); // Use linear scaling

      if(typeLayer == "distrito"){
        var row = document.createElement("tr");
        var distritoCell = document.createElement("td");
        var averagePriceAlugarCell = document.createElement("td");
        var averagePriceComprarCell = document.createElement("td");
        var averagePriceCell = document.createElement("td");
        var valueCell = document.createElement("td");
        distritoCell.textContent = typefeature;
        averagePriceAlugarCell.textContent = averagePrice_a;
        averagePriceComprarCell.textContent = averagePrice_c;
        averagePriceCell.textContent = averagePrice;
        valueCell.textContent = value;
        row.appendChild(distritoCell);
        row.appendChild(averagePriceAlugarCell);
        row.appendChild(averagePriceComprarCell);
        row.appendChild(averagePriceCell);
        row.appendChild(valueCell);
        tableBody.appendChild(row);
      }

        layer.setStyle({
          color: "white",
          fillColor: averagePrice !== null ? colorScale(value) : "transparent", // Set to transparent if there are no results
          fillOpacity: 0.5,
        });

        layer.on({
          mouseover: function (e) {
            // Access the global variables here
            layer.bindPopup(
              typeLayer +
              ": " +
              typefeature +
              "<br>Average Price Alugar: " +
              averagePrice_a +
              "<br>Average Price Comprar: " +
              averagePrice_c, {
                offset: [0, -10] // adjust the offset here to position the popup
              }).openPopup();
          },
          mouseout: function (e) {
            layer.closePopup();
          },
        });


        if (typeLayer == "distrito") {
          layer.addTo(mymap);
        }
      }

      // Define a function to load GeoJSON data, add it to a layer, and return a promise
      function loadGeoJSONAndProcess(layer, path, type) {
        return new Promise(function (resolve, reject) {
          $.getJSON(path, function (data) {
          layer.addData(data); // Add data to existing layer
          layer.eachLayer(function (l) {
            styleAndEventListeners(l.feature, l, type);
          });
          resolve();
              }).fail(function (error) {
          reject(error);
              });
        });
      }

      // Load GeoJSON data for Portugal distrito
      loadGeoJSONAndProcess(distritosData, "geojson/ContinenteDistritos.geojson", "distrito")
        .then(function () {
          console.log("Finished processing distritos");
        })
        .catch(function (error) {
          console.error("Error processing distritos:", error);
        });

      // Load GeoJSON data for Portugal concelhos
      loadGeoJSONAndProcess(concelhosData, "geojson/ContinenteConcelhos.geojson", "concelho")
        .then(function () {
          console.log("Finished processing concelhos");
        })
        .catch(function (error) {
          console.error("Error processing concelhos:", error);
        });

      // Load GeoJSON data for Portugal freguesias
      loadGeoJSONAndProcess(freguesiasData, "geojson/ContinenteFreguesias.geojson", "freguesia")
        .then(function () {
          console.log("Finished processing freguesias");
        })
        .catch(function (error) {
          console.error("Error processing freguesias:", error);
        });






      // Detect zoomend event and update displayed layers based on zoom level
      mymap.on('zoomend', function() {
       var zoomLevel = mymap.getZoom();
       if (zoomLevel <= 8) {
         mymap.removeLayer(concelhosData);
         mymap.removeLayer(freguesiasData);
         mymap.addLayer(distritosData);
       } else if (zoomLevel > 8 && zoomLevel <= 10) {
         mymap.removeLayer(distritosData);
         mymap.removeLayer(freguesiasData);
         mymap.addLayer(concelhosData);
       } else if (zoomLevel > 10) {
         mymap.removeLayer(distritosData);
         mymap.removeLayer(concelhosData);
         mymap.addLayer(freguesiasData);
       }
      });

      document.getElementById('layerSelect').addEventListener('change', function() {
        var selectedLayer = this.value; // Get the selected layer from the dropdown menu

        // Remove all layers from the map
        mymap.removeLayer(distritosData);
        mymap.removeLayer(freguesiasData);
        mymap.removeLayer(concelhosData);

        // Add the selected layer to the map based on the value of the dropdown menu
        if (selectedLayer === 'distritos') {
          mymap.addLayer(distritosData);
        } else if (selectedLayer === 'freguesias') {
          mymap.addLayer(freguesiasData);
        } else if (selectedLayer === 'concelhos') {
          mymap.addLayer(concelhosData);
        }
      });


      // Define a color scale function
      function colorScale(value) {
       // Define an array of colors
       var colors = ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"];

       // Define a linear scale to map values to colors
       var scale = d3.scaleLinear()
         .domain([0, 1]) // Input domain
         .range([0, colors.length - 1]); // Output range

       // Use the scale to get the index of the color in the array
       var colorIndex = Math.round(scale(value));

       // Return the color at the specified index
       return colors[colorIndex];
      }
    </script>
  </body>
</html>
