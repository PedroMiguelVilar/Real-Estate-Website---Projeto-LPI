<!DOCTYPE html>
<html>
  <head>
    <title>Portugal Map</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Load Leaflet from CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://d3js.org/d3.v6.min.js"></script>
  </head>
  <body>
    <style>
      #map {
        width: 75%;
        height: 600px;
        margin: 0 auto;
      }
      .district {
          fill: #3388ff;
          stroke: #fff;
          stroke-width: 2;
          opacity: 0.7;
        }
        .city {
          fill: #ff8800;
          stroke: #fff;
          stroke-width: 2;
          opacity: 0.7;
        }
    </style>
    <%= javascript_include_tag 'leaflet' %>
    <!-- Add a dropdown menu or a list of buttons for layer selection -->
    <select id="layerSelect">
      <option value="normal" selected>Normal</option>
      <option value="distritos">Distritos</option>
      <option value="concelhos">Concelhos</option>
      <option value="freguesias">Freguesias</option>
    </select>


    <select id="layerType">
      <option value="RentBuym2" selected>Rent/Buy Ratio</option>
      <option value="Buym2">Buy/m2</option>
      <option value="Rentm2">Rent/m2</option>
    </select>


    <div id="map"></div>
<table>
  <tr>
    <th>Distrito</th>
    <th>Average Price Alugar</th>
    <th>Average Price Comprar</th>
    <th>Average Price</th>
    <th>Value</th>
    <th>Area Alugar</th>
    <th>Area Comprar</th>
  </tr>
  <tbody id="distritosTableBody"></tbody>
</table>



    <script>

      var mymap = L.map('map').setView([38.736946, -9.142685], 6);
      var myResults = <%= results.to_json.html_safe %>;

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
       attribution: '&copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
       maxZoom: 18
      }).addTo(mymap);


      var distritosData = L.geoJSON(null, {onEachFeature: onDistritoClick}); 
      var concelhosData = L.geoJSON(null, {onEachFeature: onConcelhoClick, style: { visibility: "hidden" }});
      var freguesiasData = L.geoJSON(null, { style: { visibility: "hidden" }});
    
      // Get the table body element
      var tableBody = document.getElementById("distritosTableBody");

      function onDistritoClick(feature, layer) {
          layer.on('click', function() {
          // zoom to the clicked feature
          mymap.fitBounds(layer.getBounds());
        
          // hide the distrito layer
          distritosData.setStyle({ visibility: "hidden" });
        
          // show the concelho layer
          concelhosData.setStyle({ visibility: "visible" });
        });
      }

      function onConcelhoClick(feature, layer) {
        layer.on('click', function() {
        // zoom to the clicked feature
        mymap.fitBounds(layer.getBounds());
        
        // hide the concelho layer
        concelhosData.setStyle({ visibility: "hidden" });
        
        // show the freguesia layer
        freguesiasData.setStyle({ visibility: "visible" });
        });
      }


      // Define combined function for style and event listeners
       async function styleAndEventListeners(feature, layer, typeLayer, selectedType) {

        layer.setStyle(null);
        
        switch (typeLayer) {
          case "distrito":
           var typefeature = feature.properties.NAME_1;
           break;
          case "concelho":
           var typefeature = feature.properties.NAME_2;
           break;
          case "freguesia":
           var typefeature = feature.properties.NAME_3;
           break;
          default:
           typefeature = null;
           break;
        }
        
        let result_map, averagePrice_a, averagePrice_c;

        for (const result of myResults) {
          if (result.typeLayer === typeLayer && result.typefeature === typefeature) {
            switch(selectedType) {
              case "RentBuym2":
                result_map = result.results_valuesRB2;
                break;
              case "Buym2":
                result_map = result.results_valuesB2;
                break;
              case "Rentm2":
                result_map = result.results_valuesR2;
                break;
              default:
                console.error(`Invalid selectedType: ${selectedType}`);
                return;
            }

            averagePrice_a = result.averagePrice_a;
            averagePrice_c = result.averagePrice_c;
            break;
          }
        }

        paintlayer(result_map, typeLayer, layer, typefeature, averagePrice_a, averagePrice_c);

      }

      var reset_map = 0;


      function paintlayer(result_map, typeLayer, layer, typefeature, averagePrice_a, averagePrice_c){
        
        if(typeLayer == "distrito"){ 
          var row = document.createElement("tr");
          var distritoCell = document.createElement("td");
          var averagePriceAlugarCell = document.createElement("td");
          var averagePriceComprarCell = document.createElement("td");
          var averagePriceCell = document.createElement("td");
          var valueCell = document.createElement("td");
          var areaCell_a = document.createElement("td");
          var areaCell_c = document.createElement("td");
          distritoCell.textContent = typefeature;
          averagePriceAlugarCell.textContent = averagePrice_a;
          averagePriceComprarCell.textContent = averagePrice_c;
          valueCell.textContent = result_map;
          row.appendChild(distritoCell);
          row.appendChild(averagePriceAlugarCell);
          row.appendChild(averagePriceComprarCell);
          row.appendChild(valueCell);
          row.appendChild(areaCell_a);
          row.appendChild(areaCell_c);
          tableBody.appendChild(row);
        }

        if (result_map === null) {
          result_map = 0;
        } else if (result_map > 1) {
          result_map = 1;
        }

        layer.setStyle({
          color: "white",
          fillColor: result_map !== null ? colorScale(result_map) : "transparent", // Set to transparent if there are no results
          fillOpacity: 0.75
        });

        layer.on({
          mouseover: function (e) {
            // Access the global variables here
            layer.bindPopup(
              typeLayer +
              ": " +
              typefeature +
              "<br>Average Price Alugar: " +
              averagePrice_a +
              "<br>Average Price Comprar: " +
              averagePrice_c, {
                offset: [0, -10] // adjust the offset here to position the popup
              }).openPopup();
          },
          mouseout: function (e) {
            layer.closePopup();
          },
        });


        if (typeLayer == "distrito" && reset_map==0) {
          layer.addTo(mymap);
          reset_map = 1;
        }
      }



      // Define a function to load GeoJSON data, add it to a layer, and return a promise
      function loadGeoJSONAndProcess(layer, path, type) {
        return new Promise(function (resolve, reject) {
          $.getJSON(path, function (data) {
          layer.clearLayers();
          layer.addData(data); // Add data to existing layer
          layer.eachLayer(function (l) {
            styleAndEventListeners(l.feature, l, type, selectedType);  
            layer.setStyle(null);
          });
          resolve();
              }).fail(function (error) {
          reject(error);
              });
        });
      }

      function loadGeoJSONData(data, filePath, type, selectedType) {
        return loadGeoJSONAndProcess(data, filePath, type)
          .then(function() {
            console.log("Finished processing " + type + "s");
          })
          .catch(function(error) {
            console.error("Error processing " + type + "s:", error);
          });
      }

      
      var selectedType = "RentBuym2"
  
      loadGeoJSONData(distritosData, "geojson/ContinenteDistritos.geojson", "distrito", selectedType);
      loadGeoJSONData(concelhosData, "geojson/ContinenteConcelhos.geojson", "concelho", selectedType);
      loadGeoJSONData(freguesiasData, "geojson/ContinenteFreguesias.geojson", "freguesia", selectedType);

      var selectedLayer = "normal"; // Variable to store the selected layer
      updateDisplayedLayer();

      document.getElementById('layerSelect').addEventListener('change', function() {
        selectedLayer = this.value; // Get the selected layer from the dropdown menu
        updateDisplayedLayer(); // Call a function to update the displayed layer
      });

      function zoom_map(){
        mymap.addLayer(distritosData);
        mymap.on('zoomend', function() {
          var zoomLevel = mymap.getZoom();
          if (selectedLayer === 'normal') {
            if (zoomLevel <= 8) {
              mymap.removeLayer(concelhosData);
              mymap.removeLayer(freguesiasData);
              mymap.addLayer(distritosData);
            } else if (zoomLevel > 8 && zoomLevel <= 10) {
              mymap.removeLayer(distritosData);
              mymap.removeLayer(freguesiasData);
              mymap.addLayer(concelhosData);
            } else if (zoomLevel > 10) {
              mymap.removeLayer(distritosData);
              mymap.removeLayer(concelhosData);
              mymap.addLayer(freguesiasData);
            }
          }
        });
      }

    function updateDisplayedLayer() {
      // Remove all layers from the map
      mymap.removeLayer(distritosData);
      mymap.removeLayer(freguesiasData);
      mymap.removeLayer(concelhosData);

      // Add the selected layer to the map based on the value of the selectedLayer variable
      switch (selectedLayer) {
        case 'distritos':
          mymap.addLayer(distritosData);
          break;
        case 'freguesias':
          mymap.addLayer(freguesiasData);
          break;
        case 'concelhos':
          mymap.addLayer(concelhosData);
          break;
        case 'normal':
          zoom_map();
          break;
        default:
          // Handle default case if needed
          break;
      }
    }


    document.getElementById('layerType').addEventListener('change', function() {
      selectedType = this.value; // Get the selected layer from the dropdown menu
      updateLayerData(selectedType); // Call a function to update the layers
    });

    function updateLayerData(selectedType) {
      loadGeoJSONData(distritosData, "geojson/ContinenteDistritos.geojson", "distrito", selectedType);
      loadGeoJSONData(concelhosData, "geojson/ContinenteConcelhos.geojson", "concelho", selectedType);
      loadGeoJSONData(freguesiasData, "geojson/ContinenteFreguesias.geojson", "freguesia", selectedType);
    }

    
    function colorScale(value) {
      // Define an array of colors
      var colors = ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"];
      
      if (value === null) {
        return "transparent";
      }
      
      // Define a linear scale to map values to colors
      var scale = d3.scaleLinear()
        .domain([0, 1]) // Input domain
        .range([0, colors.length - 1]); // Output range
      // Use the scale to get the index of the color in the array
      var colorIndex = Math.round(scale(value));
      // Return the color at the specified index
      return colors[colorIndex];
    }



    </script>
  </body>
</html>